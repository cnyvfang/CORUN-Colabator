# general settings
name: Underwater_LSUI_Stage_1_UIEB_Restormer
model_type: DASUModel
scale: 1
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 8 GPUs
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: PairedDataset
#    dataroot_gt: /data/fcy/Datasets/Dehaze/OTS_ALPHA/clear_ori
#    dataroot_depth: /data/fcy/Datasets/Dehaze/OTS_ALPHA/depth
    dataroot_gt: /data/fcy/Datasets/Underwater/UIEB/train/hq
    dataroot_lq: /data/fcy/Datasets/Underwater/UIEB/train/lq

    filename_tmpl: '{}'
    io_backend:
      type: disk

    use_resize_crop: true
    use_hflip: true
    use_rot: false

    num_worker_per_gpu: 20
    batch_size_per_gpu: 2
    mini_batch_sizes: [ 2 ]             # Batch size per gpu
    iters: [ 100000 ]
    gt_size: 128   # Max patch size for progressive training
    gt_sizes: [ 128 ]  # Patch sizes for progressive training.

    # data loader
    use_shuffle: true
    dataset_enlarge_ratio: 10
    prefetch_mode: ~

  # Uncomment these for validation
  val:
#    name: RTTS_Lite
#    type: SemiPairedDataset
#    dataroot_lq: /data/fcy/Datasets/Dehaze/RTTS_Lite
#    dataroot_gt: /data/fcy/Datasets/Dehaze/RIDCP/rgb_500
#    gt_size: 256
#    io_backend:
#      type: disk
    name: ValSet
    type: TestDataset
    dataroot_gt: /data/fcy/Datasets/Underwater/UIEB/test/hq
    dataroot_lq: /data/fcy/Datasets/Underwater/UIEB/test/lq
    io_backend:
      type: disk

# network structures
network_g:
  type: Restormer
  inp_channels: 3
  out_channels: 3
  dim: 48
  num_blocks: [4,6,6,8]
  num_refinement_blocks: 4
  heads: [1,2,4,8]
  ffn_expansion_factor: 1.5
  bias: False
  LayerNorm_type: WithBias
  dual_pixel_task: False

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  asm_loss: False

  optim_g:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.999]

  gen_scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [100000]
    restart_weights: [1]
    eta_mins: [0.0001]

  total_iter: 100000
  warmup_iter: -1  # no warm up

  mixing_augs:
    mixup: false
    mixup_beta: 1.2
    use_identity: true

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1.0
    reduction: mean

#  psnr_opt:
#    type: PSNRLoss
#    loss_weight: 1.0
#    reduction: mean

  contrastperceptual_opt:
    type: ContrastPerceptualLoss
    # vgg_layer_indices: 2,7,12,21,30
    # weights: 1/32, 1/16, 1/8, 1/4, 1
    layer_weights:
      'relu1_1': !!float 3.125e-2
      'relu2_1': !!float 6.25e-2
      'relu3_1': !!float 0.125
      'relu4_1': !!float 0.25
      'relu5_1': !!float 1.0
    vgg_type: vgg19
    use_input_norm: false # keep in [0,1] range
    range_norm: false
    perceptual_weight: !!float 0.2
    style_weight: 0
    criterion: l1
#
#  tv_opt:
#    type: TVLoss
#    loss_weight: !!float 0.1

# Uncomment these for validation
# validation settings
val:
  pbar: true
  val_freq: !!float 5000
  save_img: true
  window_size: 16

  metrics:
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

    psnr: # metric name
        type: calculate_psnr
        crop_border: 0
        test_y_channel: false

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500